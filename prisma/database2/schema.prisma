datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres.cvtiluhyqchsnakvanxh:8rARigH_4q7cHTs@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres"
  
  

  // 8rARigH_4q7cHTs
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/database2"
}


model Tenant {
  id         String     @id @default(uuid())
  name       String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  // users      User[]
  // divisions  Division[]
  // projects   Project[]
  // attendances Attendance[]
}

// model Division {
//   id        String     @id @default(uuid())
//   name      String
//   tenant    Tenant     @relation(fields: [tenantId], references: [id])
//   tenantId  String
//   users     User[]
//   createdAt DateTime   @default(now())
//   updatedAt DateTime   @updatedAt
// }

// model User {
//   id         String       @id @default(uuid())
//   name       String
//   email      String       @unique
//   password   String
//   tenant     Tenant       @relation(fields: [tenantId], references: [id])
//   tenantId   String
//   division   Division?    @relation(fields: [divisionId], references: [id])
//   divisionId String?
//   roles      UserRole[]
//   projects   UserProject[]
//   attendances Attendance[]
//   createdAt  DateTime     @default(now())
//   updatedAt  DateTime     @updatedAt
// }

// model Role {
//   id          String      @id @default(uuid())
//   name        String
//   description String?
//   users       UserRole[]
//   permissions RolePermission[]
// }

// model Permission {
//   id          String          @id @default(uuid())
//   name        String
//   description String?
//   roles       RolePermission[]
// }

// model UserRole {
//   id       String @id @default(uuid())
//   user     User   @relation(fields: [userId], references: [id])
//   userId   String
//   role     Role   @relation(fields: [roleId], references: [id])
//   roleId   String
//   assignedAt DateTime @default(now())
// }

// model RolePermission {
//   id          String      @id @default(uuid())
//   role        Role        @relation(fields: [roleId], references: [id])
//   roleId      String
//   permission  Permission  @relation(fields: [permissionId], references: [id])
//   permissionId String
// }

// model Project {
//   id          String       @id @default(uuid())
//   name        String
//   description String?
//   tenant      Tenant       @relation(fields: [tenantId], references: [id])
//   tenantId    String
//   users       UserProject[]
//   createdAt   DateTime     @default(now())
//   updatedAt   DateTime     @updatedAt
// }

// model UserProject {
//   id            String   @id @default(uuid())
//   user          User     @relation(fields: [userId], references: [id])
//   userId        String
//   project       Project  @relation(fields: [projectId], references: [id])
//   projectId     String
//   roleInProject String?
//   assignedAt    DateTime @default(now())
// }

// model Attendance {
//   id          String   @id @default(uuid())
//   user        User     @relation(fields: [userId], references: [id])
//   userId      String
//   tenant      Tenant   @relation(fields: [tenantId], references: [id])
//   tenantId    String
//   checkInTime DateTime
//   checkOutTime DateTime?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
// }