datasource db {
  provider = "mysql"
  url      = "mysql://root@localhost:3306/toko2"
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/database2"
}


model Tenant {
  id          Int        @id @default(autoincrement())
  name        String
  status      Boolean
  companies   Company[]
  users       User[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Company {
  id          Int        @id @default(autoincrement())
  name        String
  status      Boolean
  tenantId    Int
  tenant      Tenant      @relation(fields: [tenantId], references: [id])
  divisions   Division[]
  projects    Project[]
  users       User[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Division {
  id          Int        @id @default(autoincrement())
  name        String
  companyId   Int
  company     Company     @relation(fields: [companyId], references: [id])
  users       User[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model User {
  id          Int        @id @default(autoincrement())
  email       String      @unique
  name        String
  password    String
  tenantId    Int
  tenant      Tenant      @relation(fields: [tenantId], references: [id])
  companyId   Int
  company     Company     @relation(fields: [companyId], references: [id])
  divisionId  Int?
  division    Division?   @relation(fields: [divisionId], references: [id])
  attendances Attendance[]
  userProjects UserProject[]
  userRoles   UserRole[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String
  userRoles   UserRole[]
  rolePermissions RolePermission[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Permission {
  id          Int        @id @default(autoincrement())
  name        String
  rolePermissions RolePermission[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Attendance {
  id          Int        @id @default(autoincrement())
  date        DateTime
  status      String
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Project {
  id          Int        @id @default(autoincrement())
  name        String
  companyId   Int
  company     Company     @relation(fields: [companyId], references: [id])
  userProjects UserProject[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model UserProject {
  id          Int        @id @default(autoincrement())
  userId      Int
  projectId   Int
  user        User        @relation(fields: [userId], references: [id])
  project     Project     @relation(fields: [projectId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@unique([userId, projectId])
}

model UserRole {
  id          Int        @id @default(autoincrement())
  userId      Int
  roleId      Int
  user        User        @relation(fields: [userId], references: [id])
  role        Role        @relation(fields: [roleId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@unique([userId, roleId])
}

model RolePermission {
  id          Int        @id @default(autoincrement())
  roleId      Int
  permissionId Int
  role        Role        @relation(fields: [roleId], references: [id])
  permission  Permission  @relation(fields: [permissionId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@unique([roleId, permissionId])
}
